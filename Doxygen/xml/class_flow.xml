<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_flow" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Flow</compoundname>
    <derivedcompoundref refid="class_generic_flow" prot="public" virt="non-virtual">GenericFlow</derivedcompoundref>
    <derivedcompoundref refid="class_t_c_p_flow" prot="public" virt="non-virtual">TCPFlow</derivedcompoundref>
    <includes refid="_flow_8h" local="no">Flow.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_flow_1a52567a3ca729f427bf869efb594723d6" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Flow::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="67" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_flow_1aa8076d1b48c6de5c736bc64164d15320" prot="protected" static="no" mutable="no">
        <type><ref refid="class_flow" kindref="compound">Flow</ref> *</type>
        <definition>Flow* Flow::brother</definition>
        <argsstring></argsstring>
        <name>brother</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="68" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_flow_1ae5faa5bcc061f892714082b3dc199408" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Flow::modified</definition>
        <argsstring></argsstring>
        <name>modified</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="69" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_flow_1aa3e211d010942314d8811879bb87e191" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="class_flow" kindref="compound">Flow</ref> *, <ref refid="class_flow" kindref="compound">Flow</ref> * &gt; *</type>
        <definition>std::pair&lt; Flow *, Flow * &gt; * Flow::makeFlowPair</definition>
        <argsstring>(uint8_t, std::string, std::string)</argsstring>
        <name>makeFlowPair</name>
        <param>
          <type>uint8_t</type>
          <defname>protocol_id</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>key0</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>key1</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Class that representing a communication channel. FixME: this should not be here. Maybe... It should not know about sibling classes ?? This is a factory method that creates both flow pairs for two generated keys. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="47" column="1" bodyfile="/home/xshell/git/RehtSe/src/flows/Flow.cpp" bodystart="38" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_flow_1a46a48b06f94913c9d3ea42ca16b14794" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_flow" kindref="compound">Flow</ref> *</type>
        <definition>Flow * Flow::makeFlow</definition>
        <argsstring>(uint8_t, std::string)</argsstring>
        <name>makeFlow</name>
        <param>
          <type>uint8_t</type>
          <defname>protocol_id</defname>
        </param>
        <param>
          <type>std::string</type>
          <defname>key</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FixME: this should not be here.Maybe... It should not know about sibling classes ?? This is a factory method that creates a flow a generated key. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="52" column="1" bodyfile="/home/xshell/git/RehtSe/src/flows/Flow.cpp" bodystart="56" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_flow_1a5991efa6e8cf88c4ef2125cc727db333" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Flow::~Flow</definition>
        <argsstring>()</argsstring>
        <name>~Flow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="53" column="1" bodyfile="/home/xshell/git/RehtSe/src/flows/Flow.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_flow_1aabcb243e3a9c04c1eb9b1090a3520544" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Flow::handlePacket</definition>
        <argsstring>(Crafter::Packet *)=0</argsstring>
        <name>handlePacket</name>
        <reimplementedby refid="class_t_c_p_flow_1a3ff0dd52eb3f3660dcb092d47da1b2f5">handlePacket</reimplementedby>
        <reimplementedby refid="class_generic_flow_1a5c859935f4af3f4fd2754be1c31086c8">handlePacket</reimplementedby>
        <param>
          <type>Crafter::Packet *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface to be implemented by sibling classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_flow_1a30c028250e76e2c76837b19791185733" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_flow" kindref="compound">Flow</ref> *</type>
        <definition>const Flow* Flow::getBrother</definition>
        <argsstring>() const </argsstring>
        <name>getBrother</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="58" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_flow_1ac41cf6542a8ef14cae38ed131d34dbb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Flow::setBrother</definition>
        <argsstring>(Flow *brother)</argsstring>
        <name>setBrother</name>
        <param>
          <type><ref refid="class_flow" kindref="compound">Flow</ref> *</type>
          <declname>brother</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="61" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_flow_1af268e1b04298b6c2e123a5112fb3206f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Flow::Flow</definition>
        <argsstring>(std::string key)</argsstring>
        <name>Flow</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="66" column="1" bodyfile="/home/xshell/git/RehtSe/src/flows/Flow.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>Flow</label>
        <link refid="class_flow"/>
      </node>
      <node id="1">
        <label>GenericFlow</label>
        <link refid="class_generic_flow"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TCPFlow</label>
        <link refid="class_t_c_p_flow"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Flow</label>
        <link refid="class_flow"/>
        <childnode refid="3" relation="usage">
          <edgelabel>brother</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/xshell/git/RehtSe/include/flows/Flow.h" line="37" column="1" bodyfile="/home/xshell/git/RehtSe/include/flows/Flow.h" bodystart="37" bodyend="71"/>
    <listofallmembers>
      <member refid="class_flow_1aa8076d1b48c6de5c736bc64164d15320" prot="protected" virt="non-virtual"><scope>Flow</scope><name>brother</name></member>
      <member refid="class_flow_1af268e1b04298b6c2e123a5112fb3206f" prot="protected" virt="non-virtual"><scope>Flow</scope><name>Flow</name></member>
      <member refid="class_flow_1a30c028250e76e2c76837b19791185733" prot="public" virt="non-virtual"><scope>Flow</scope><name>getBrother</name></member>
      <member refid="class_flow_1aabcb243e3a9c04c1eb9b1090a3520544" prot="public" virt="pure-virtual"><scope>Flow</scope><name>handlePacket</name></member>
      <member refid="class_flow_1a52567a3ca729f427bf869efb594723d6" prot="protected" virt="non-virtual"><scope>Flow</scope><name>key</name></member>
      <member refid="class_flow_1a46a48b06f94913c9d3ea42ca16b14794" prot="public" virt="non-virtual"><scope>Flow</scope><name>makeFlow</name></member>
      <member refid="class_flow_1aa3e211d010942314d8811879bb87e191" prot="public" virt="non-virtual"><scope>Flow</scope><name>makeFlowPair</name></member>
      <member refid="class_flow_1ae5faa5bcc061f892714082b3dc199408" prot="protected" virt="non-virtual"><scope>Flow</scope><name>modified</name></member>
      <member refid="class_flow_1ac41cf6542a8ef14cae38ed131d34dbb9" prot="public" virt="non-virtual"><scope>Flow</scope><name>setBrother</name></member>
      <member refid="class_flow_1a5991efa6e8cf88c4ef2125cc727db333" prot="public" virt="virtual"><scope>Flow</scope><name>~Flow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
