<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="radix__tree__node_8hpp" kind="file" language="C++">
    <compoundname>radix_tree_node.hpp</compoundname>
    <includes local="no">map</includes>
    <includedby refid="radix__tree_8hpp" local="yes">/home/xshell/git/RehtSe/include/radix_tree.hpp</includedby>
    <incdepgraph>
      <node id="327">
        <label>/home/xshell/git/RehtSe/include/radix_tree_node.hpp</label>
        <link refid="radix_tree_node.hpp"/>
        <childnode refid="328" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="333">
        <label>/home/xshell/git/RehtSe/include/UserInterface.h</label>
        <link refid="_user_interface_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>/home/xshell/git/RehtSe/include/NFQueue.h</label>
        <link refid="_n_f_queue_8h"/>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>/home/xshell/git/RehtSe/include/radix_tree_node.hpp</label>
        <link refid="radix_tree_node.hpp"/>
        <childnode refid="330" relation="include">
        </childnode>
      </node>
      <node id="335">
        <label>/home/xshell/git/RehtSe/src/UserInterface.cpp</label>
        <link refid="_user_interface_8cpp"/>
      </node>
      <node id="330">
        <label>/home/xshell/git/RehtSe/include/radix_tree.hpp</label>
        <link refid="radix__tree_8hpp"/>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="331">
        <label>/home/xshell/git/RehtSe/include/flows/FlowTracker.h</label>
        <link refid="_flow_tracker_8h"/>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
      </node>
      <node id="337">
        <label>/home/xshell/git/RehtSe/src/flows/FlowTracker.cpp</label>
        <link refid="_flow_tracker_8cpp"/>
      </node>
      <node id="334">
        <label>/home/xshell/git/RehtSe/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="336">
        <label>/home/xshell/git/RehtSe/src/NFQueue.cpp</label>
        <link refid="_n_f_queue_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classradix__tree__node" prot="public">radix_tree_node</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RADIX_TREE_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RADIX_TREE_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref><sp/>{</highlight></codeline>
<codeline lineno="8" refid="classradix__tree__node_1a0596aeb27884e8ff44f365527f6a8f12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree" kindref="compound">radix_tree</ref>&lt;K,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="9" refid="classradix__tree__node_1a11139749f60f9d620915dd76917d1479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref>&lt;K,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;const<sp/>K,<sp/>T&gt;<sp/>value_type;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>radix_tree_node&lt;K,<sp/>T&gt;*<sp/>&gt;::iterator<sp/>it_child;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>()<sp/>:<sp/>m_children(),<sp/>m_parent(NULL),<sp/>m_value(NULL),<sp/>m_depth(0),<sp/>m_is_leaf(false),<sp/>m_key()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;val);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&amp;<sp/><ref refid="classradix__tree__it_1a2aae5ad4b5b2dacd5f77429c92fa5687" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;K,<sp/>radix_tree_node&lt;K,<sp/>T&gt;*&gt;<sp/>m_children;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref><sp/>*m_parent;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>*m_value;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_depth;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_is_leaf;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>K<sp/>m_key;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;::radix_tree_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;val)<sp/>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m_children(),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>m_parent(NULL),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value(NULL),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_depth(0),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_is_leaf(false),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_key()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>value_type(val);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;::~radix_tree_node</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>it_child<sp/>it;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>m_children.begin();<sp/>it<sp/>!=<sp/>m_children.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_value;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RADIX_TREE_NODE_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/xshell/git/RehtSe/include/radix_tree_node.hpp"/>
  </compounddef>
</doxygen>
