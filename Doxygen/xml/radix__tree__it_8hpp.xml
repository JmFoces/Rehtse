<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="radix__tree__it_8hpp" kind="file" language="C++">
    <compoundname>radix_tree_it.hpp</compoundname>
    <includes local="no">iterator</includes>
    <includedby refid="radix__tree_8hpp" local="yes">/home/xshell/git/RehtSe/include/radix_tree.hpp</includedby>
    <incdepgraph>
      <node id="317">
        <label>iterator</label>
      </node>
      <node id="316">
        <label>/home/xshell/git/RehtSe/include/radix_tree_it.hpp</label>
        <link refid="radix_tree_it.hpp"/>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="322">
        <label>/home/xshell/git/RehtSe/include/UserInterface.h</label>
        <link refid="_user_interface_8h"/>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
      </node>
      <node id="321">
        <label>/home/xshell/git/RehtSe/include/NFQueue.h</label>
        <link refid="_n_f_queue_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>/home/xshell/git/RehtSe/src/UserInterface.cpp</label>
        <link refid="_user_interface_8cpp"/>
      </node>
      <node id="319">
        <label>/home/xshell/git/RehtSe/include/radix_tree.hpp</label>
        <link refid="radix__tree_8hpp"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="318">
        <label>/home/xshell/git/RehtSe/include/radix_tree_it.hpp</label>
        <link refid="radix_tree_it.hpp"/>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="320">
        <label>/home/xshell/git/RehtSe/include/flows/FlowTracker.h</label>
        <link refid="_flow_tracker_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>/home/xshell/git/RehtSe/src/flows/FlowTracker.cpp</label>
        <link refid="_flow_tracker_8cpp"/>
      </node>
      <node id="323">
        <label>/home/xshell/git/RehtSe/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="325">
        <label>/home/xshell/git/RehtSe/src/NFQueue.cpp</label>
        <link refid="_n_f_queue_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classradix__tree" prot="public">radix_tree</innerclass>
    <innerclass refid="classradix__tree__node" prot="public">radix_tree_node</innerclass>
    <innerclass refid="classradix__tree__it" prot="public">radix_tree_it</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RADIX_TREE_IT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RADIX_TREE_IT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree" kindref="compound">radix_tree</ref>;</highlight></codeline>
<codeline lineno="8" refid="classradix__tree__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="11" refid="classradix__tree__it" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::iterator&lt;std::forward_iterator_tag,<sp/>std::pair&lt;K,<sp/>T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="12" refid="classradix__tree__it_1a0596aeb27884e8ff44f365527f6a8f12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradix__tree" kindref="compound">radix_tree</ref>&lt;K,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="classradix__tree__it_1ab32c43daa26d8df9031813b820bfe30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it_1ab32c43daa26d8df9031813b820bfe30f" kindref="member">radix_tree_it</ref>()<sp/>:<sp/>m_pointee(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="16" refid="classradix__tree__it_1a2817b4be2cc40a29a380175c9c774028" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it_1a2817b4be2cc40a29a380175c9c774028" kindref="member">radix_tree_it</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref>&amp;<sp/>r)<sp/>:<sp/>m_pointee(r.m_pointee)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="17" refid="classradix__tree__it_1a2aae5ad4b5b2dacd5f77429c92fa5687" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref>&amp;<sp/><ref refid="classradix__tree__it_1a2aae5ad4b5b2dacd5f77429c92fa5687" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref>&amp;<sp/>r)<sp/>{<sp/>m_pointee<sp/>=<sp/>r.m_pointee;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="18" refid="classradix__tree__it_1a678a52ad4a84891319e79cc83046eb00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it_1a678a52ad4a84891319e79cc83046eb00" kindref="member">~radix_tree_it</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;const<sp/>K,<sp/>T&gt;&amp;<sp/><ref refid="classradix__tree__it_1ad729635bf943750c84a391adfab650d5" kindref="member">operator*  </ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;const<sp/>K,<sp/>T&gt;*<sp/><ref refid="classradix__tree__it_1af9625539926f984aea370867e96aa985" kindref="member">operator-&gt; </ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref>&amp;<sp/><ref refid="classradix__tree__it_1aeaee75d1faafcd02ec5ff9c0fa161818" kindref="member">operator++ </ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/><ref refid="classradix__tree__it_1aeaee75d1faafcd02ec5ff9c0fa161818" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>radix_tree_it&lt;K,<sp/>T&gt;&amp;<sp/>operator--<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it_1aaae533a0e6ad7b243f567798bbfdfa2b" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/>&amp;lhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it_1a0b7c9edd34bd97a360b6ca17de6b6534" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/>&amp;lhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref><sp/>*m_pointee;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it_1ab32c43daa26d8df9031813b820bfe30f" kindref="member">radix_tree_it</ref>(<ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref><sp/>*p)<sp/>:<sp/>m_pointee(p)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>increment(<ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>node)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>descend(<ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>node)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;::increment</ref>(<ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>node)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>parent<sp/>=<sp/>node-&gt;m_parent;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>radix_tree_node&lt;K,<sp/>T&gt;::it_child<sp/>it<sp/>=<sp/>parent-&gt;m_children.find(node-&gt;m_key);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(it<sp/>!=<sp/>parent-&gt;m_children.end());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>parent-&gt;m_children.end())</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>increment(parent);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descend(it-&gt;second);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;::descend</ref>(<ref refid="classradix__tree__node" kindref="compound">radix_tree_node&lt;K, T&gt;</ref>*<sp/>node)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;m_is_leaf)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>radix_tree_node&lt;K,<sp/>T&gt;::it_child<sp/>it<sp/>=<sp/>node-&gt;m_children.begin();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(it<sp/>!=<sp/>node-&gt;m_children.end());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descend(it-&gt;second);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="68" refid="classradix__tree__it_1ad729635bf943750c84a391adfab650d5" refkind="member"><highlight class="normal">std::pair&lt;const<sp/>K,<sp/>T&gt;&amp;<sp/><ref refid="classradix__tree__it_1ad729635bf943750c84a391adfab650d5" kindref="member">radix_tree_it&lt;K, T&gt;::operator* </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_pointee-&gt;m_value;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="74" refid="classradix__tree__it_1af9625539926f984aea370867e96aa985" refkind="member"><highlight class="normal">std::pair&lt;const<sp/>K,<sp/>T&gt;*<sp/><ref refid="classradix__tree__it_1af9625539926f984aea370867e96aa985" kindref="member">radix_tree_it&lt;K, T&gt;::operator-&gt; </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointee-&gt;m_value;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="80" refid="classradix__tree__it_1aaae533a0e6ad7b243f567798bbfdfa2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it_1aaae533a0e6ad7b243f567798bbfdfa2b" kindref="member">radix_tree_it&lt;K, T&gt;::operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/>&amp;lhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointee<sp/>!=<sp/>lhs.m_pointee;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86" refid="classradix__tree__it_1a0b7c9edd34bd97a360b6ca17de6b6534" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it_1a0b7c9edd34bd97a360b6ca17de6b6534" kindref="member">radix_tree_it&lt;K, T&gt;::operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/>&amp;lhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointee<sp/>==<sp/>lhs.m_pointee;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="92" refid="classradix__tree__it_1aeaee75d1faafcd02ec5ff9c0fa161818" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref>&amp;<sp/><ref refid="classradix__tree__it_1aeaee75d1faafcd02ec5ff9c0fa161818" kindref="member">radix_tree_it&lt;K, T&gt;::operator++ </ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointee<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>undefined<sp/>behaviour<sp/>to<sp/>dereference<sp/>iterator<sp/>that<sp/>is<sp/>out<sp/>of<sp/>bounds...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointee<sp/>=<sp/>increment(m_pointee);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100" refid="classradix__tree__it_1abd41bd4b4e1b5f7b95ec8c99030c37ae" refkind="member"><highlight class="normal"><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/><ref refid="classradix__tree__it_1aeaee75d1faafcd02ec5ff9c0fa161818" kindref="member">radix_tree_it&lt;K, T&gt;::operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradix__tree__it" kindref="compound">radix_tree_it&lt;K, T&gt;</ref><sp/>copy(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment">template<sp/>&lt;typename<sp/>K,<sp/>typename<sp/>T&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="comment">const<sp/>radix_tree_it&lt;K,<sp/>T&gt;&amp;<sp/>radix_tree_it&lt;K,<sp/>T&gt;::operator--<sp/>()</highlight></codeline>
<codeline lineno="110"><highlight class="comment">{</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/>assert(m_pointee<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline lineno="114"><highlight class="comment">}</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RADIX_TREE_IT</highlight></codeline>
    </programlisting>
    <location file="/home/xshell/git/RehtSe/include/radix_tree_it.hpp"/>
  </compounddef>
</doxygen>
