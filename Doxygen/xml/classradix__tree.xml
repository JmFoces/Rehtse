<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classradix__tree" kind="class" language="C++" prot="public">
    <compoundname>radix_tree</compoundname>
    <includes refid="radix__tree_8hpp" local="no">radix_tree.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>K</declname>
        <defname>K</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classradix__tree_1a9c91791a795ceee58a0c691a46956e8a" prot="public" static="no">
        <type>K</type>
        <definition>typedef K radix_tree&lt; K, T &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="42" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classradix__tree_1a08a4d9146274d8f166604a9ba670227d" prot="public" static="no">
        <type>T</type>
        <definition>typedef T radix_tree&lt; K, T &gt;::mapped_type</definition>
        <argsstring></argsstring>
        <name>mapped_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="43" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classradix__tree_1a6053e1b2ccac54f990d6377a1797ebc8" prot="public" static="no">
        <type>std::pair&lt; const K, T &gt;</type>
        <definition>typedef std::pair&lt;const K, T&gt; radix_tree&lt; K, T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="44" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classradix__tree_1a820fe40af6049993760c529e918c5575" prot="public" static="no">
        <type><ref refid="classradix__tree__it" kindref="compound">radix_tree_it</ref>&lt; K, T &gt;</type>
        <definition>typedef radix_tree_it&lt;K, T&gt; radix_tree&lt; K, T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="45" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classradix__tree_1a67d23e7c48875261141f6259ade40749" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t radix_tree&lt; K, T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="46" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classradix__tree_1a28d18503da34570c77f06d3afb4e0651" prot="private" static="no" mutable="no">
        <type><ref refid="classradix__tree_1a67d23e7c48875261141f6259ade40749" kindref="member">size_type</ref></type>
        <definition>size_type radix_tree&lt; K, T &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="79" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classradix__tree_1ade8e59097d9192616b2b79ae4d0d129b" prot="private" static="no" mutable="no">
        <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
        <definition>radix_tree_node&lt;K, T&gt;* radix_tree&lt; K, T &gt;::m_root</definition>
        <argsstring></argsstring>
        <name>m_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="80" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classradix__tree_1af48f519c2190b3ca6762a2d8d4bb0fb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>radix_tree&lt; K, T &gt;::radix_tree</definition>
        <argsstring>()</argsstring>
        <name>radix_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="48" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a2bb7871a53afe5f826b3ab77fe039075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>radix_tree&lt; K, T &gt;::~radix_tree</definition>
        <argsstring>()</argsstring>
        <name>~radix_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="49" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1aaf72ee1826a0ace064ed5f1d62f10aff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classradix__tree_1a67d23e7c48875261141f6259ade40749" kindref="member">size_type</ref></type>
        <definition>size_type radix_tree&lt; K, T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="53" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1ad4cdb29807c357f41ead6a4da8fd0666" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool radix_tree&lt; K, T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="56" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a6c1152cdbae47781da0f9939f32760c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void radix_tree&lt; K, T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="59" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1ac81a340d1ba443a074dfcb6cd94e10ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref></type>
        <definition>radix_tree&lt; K, T &gt;::iterator radix_tree&lt; K, T &gt;::find</definition>
        <argsstring>(const K &amp;key)</argsstring>
        <name>find</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="65" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="452" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a21d97262afed8dc8bed0d1f1059a9c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref></type>
        <definition>radix_tree&lt; K, T &gt;::iterator radix_tree&lt; K, T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="66" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1ae4f5d38cb6294fbf194eea9083fb653c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref></type>
        <definition>radix_tree&lt; K, T &gt;::iterator radix_tree&lt; K, T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="67" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a6f13485d5e3091ba26fe0b51cfd49f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref>, bool &gt;</type>
        <definition>std::pair&lt; typename radix_tree&lt; K, T &gt;::iterator, bool &gt; radix_tree&lt; K, T &gt;::insert</definition>
        <argsstring>(const value_type &amp;val)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="classradix__tree_1a6053e1b2ccac54f990d6377a1797ebc8" kindref="member">value_type</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="69" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="421" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a0cb893a83d6178476627810ae753a0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radix_tree&lt; K, T &gt;::erase</definition>
        <argsstring>(const K &amp;key)</argsstring>
        <name>erase</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="70" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="242" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a6214bf995a2f7cc3a8bd2be38bc381eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix_tree&lt; K, T &gt;::erase</definition>
        <argsstring>(iterator it)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref></type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="71" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a819af474517e7398ba61c0f72e4fa545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix_tree&lt; K, T &gt;::prefix_match</definition>
        <argsstring>(const K &amp;key, std::vector&lt; iterator &gt; &amp;vec)</argsstring>
        <name>prefix_match</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="72" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="93" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a7fb4e244818ad60f4bbf936533ba18e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix_tree&lt; K, T &gt;::greedy_match</definition>
        <argsstring>(const K &amp;key, std::vector&lt; iterator &gt; &amp;vec)</argsstring>
        <name>greedy_match</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="73" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="203" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a65818f8ce51e27448a8afd47971e984e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref></type>
        <definition>radix_tree&lt; K, T &gt;::iterator radix_tree&lt; K, T &gt;::longest_match</definition>
        <argsstring>(const K &amp;key)</argsstring>
        <name>longest_match</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="74" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="119" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1ae66624c974244381c917486275b47738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; radix_tree&lt; K, T &gt;::operator[]</definition>
        <argsstring>(const K &amp;lhs)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const K &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="76" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="183" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classradix__tree_1a013e943793aef78d469ab21dc4252a15" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
        <definition>radix_tree_node&lt; K, T &gt; * radix_tree&lt; K, T &gt;::begin</definition>
        <argsstring>(radix_tree_node&lt; K, T &gt; *node)</argsstring>
        <name>begin</name>
        <param>
          <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="82" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1abc5d0b69ecc6ad9723708f486d551a89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
        <definition>radix_tree_node&lt; K, T &gt; * radix_tree&lt; K, T &gt;::find_node</definition>
        <argsstring>(const K &amp;key, radix_tree_node&lt; K, T &gt; *node, int depth)</argsstring>
        <name>find_node</name>
        <param>
          <type>const K &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="83" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="467" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a4c93b8d706be76f9f859537b27a18f8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
        <definition>radix_tree_node&lt; K, T &gt; * radix_tree&lt; K, T &gt;::append</definition>
        <argsstring>(radix_tree_node&lt; K, T &gt; *parent, const value_type &amp;val)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classradix__tree_1a6053e1b2ccac54f990d6377a1797ebc8" kindref="member">value_type</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="84" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="309" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a6493ad6727b0b30a448ea1dd4dd3e806" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
        <definition>radix_tree_node&lt; K, T &gt; * radix_tree&lt; K, T &gt;::prepend</definition>
        <argsstring>(radix_tree_node&lt; K, T &gt; *node, const value_type &amp;val)</argsstring>
        <name>prepend</name>
        <param>
          <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="classradix__tree_1a6053e1b2ccac54f990d6377a1797ebc8" kindref="member">value_type</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="85" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="355" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a520e7da024e3ee58b03d6527eea53ef4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radix_tree&lt; K, T &gt;::greedy_match</definition>
        <argsstring>(radix_tree_node&lt; K, T &gt; *node, std::vector&lt; iterator &gt; &amp;vec)</argsstring>
        <name>greedy_match</name>
        <param>
          <type><ref refid="classradix__tree__node" kindref="compound">radix_tree_node</ref>&lt; K, T &gt; *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classradix__tree_1a820fe40af6049993760c529e918c5575" kindref="member">iterator</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="86" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="221" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1a6ce5214a1145a11e25e889a1c00464f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radix_tree&lt; K, T &gt;::radix_tree</definition>
        <argsstring>(const radix_tree &amp;other)</argsstring>
        <name>radix_tree</name>
        <param>
          <type>const <ref refid="classradix__tree" kindref="compound">radix_tree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classradix__tree_1af1abeda6b7a5d6faa31daa9a7b00e64b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classradix__tree" kindref="compound">radix_tree</ref> &amp;</type>
        <definition>radix_tree&amp; radix_tree&lt; K, T &gt;::operator=</definition>
        <argsstring>(const radix_tree other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classradix__tree" kindref="compound">radix_tree</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="89" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/xshell/git/RehtSe/include/radix_tree.hpp" line="40" column="1" bodyfile="/home/xshell/git/RehtSe/include/radix_tree.hpp" bodystart="40" bodyend="90"/>
    <listofallmembers>
      <member refid="classradix__tree_1a4c93b8d706be76f9f859537b27a18f8d" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>append</name></member>
      <member refid="classradix__tree_1a21d97262afed8dc8bed0d1f1059a9c5e" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>begin</name></member>
      <member refid="classradix__tree_1a013e943793aef78d469ab21dc4252a15" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>begin</name></member>
      <member refid="classradix__tree_1a6c1152cdbae47781da0f9939f32760c4" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>clear</name></member>
      <member refid="classradix__tree_1ad4cdb29807c357f41ead6a4da8fd0666" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>empty</name></member>
      <member refid="classradix__tree_1ae4f5d38cb6294fbf194eea9083fb653c" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>end</name></member>
      <member refid="classradix__tree_1a0cb893a83d6178476627810ae753a0a2" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>erase</name></member>
      <member refid="classradix__tree_1a6214bf995a2f7cc3a8bd2be38bc381eb" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>erase</name></member>
      <member refid="classradix__tree_1ac81a340d1ba443a074dfcb6cd94e10ae" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>find</name></member>
      <member refid="classradix__tree_1abc5d0b69ecc6ad9723708f486d551a89" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>find_node</name></member>
      <member refid="classradix__tree_1a7fb4e244818ad60f4bbf936533ba18e1" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>greedy_match</name></member>
      <member refid="classradix__tree_1a520e7da024e3ee58b03d6527eea53ef4" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>greedy_match</name></member>
      <member refid="classradix__tree_1a6f13485d5e3091ba26fe0b51cfd49f0a" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>insert</name></member>
      <member refid="classradix__tree_1a820fe40af6049993760c529e918c5575" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>iterator</name></member>
      <member refid="classradix__tree_1a9c91791a795ceee58a0c691a46956e8a" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>key_type</name></member>
      <member refid="classradix__tree_1a65818f8ce51e27448a8afd47971e984e" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>longest_match</name></member>
      <member refid="classradix__tree_1ade8e59097d9192616b2b79ae4d0d129b" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>m_root</name></member>
      <member refid="classradix__tree_1a28d18503da34570c77f06d3afb4e0651" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>m_size</name></member>
      <member refid="classradix__tree_1a08a4d9146274d8f166604a9ba670227d" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>mapped_type</name></member>
      <member refid="classradix__tree_1af1abeda6b7a5d6faa31daa9a7b00e64b" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>operator=</name></member>
      <member refid="classradix__tree_1ae66624c974244381c917486275b47738" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>operator[]</name></member>
      <member refid="classradix__tree_1a819af474517e7398ba61c0f72e4fa545" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>prefix_match</name></member>
      <member refid="classradix__tree_1a6493ad6727b0b30a448ea1dd4dd3e806" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>prepend</name></member>
      <member refid="classradix__tree_1af48f519c2190b3ca6762a2d8d4bb0fb8" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>radix_tree</name></member>
      <member refid="classradix__tree_1a6ce5214a1145a11e25e889a1c00464f0" prot="private" virt="non-virtual"><scope>radix_tree</scope><name>radix_tree</name></member>
      <member refid="classradix__tree_1aaf72ee1826a0ace064ed5f1d62f10aff" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>size</name></member>
      <member refid="classradix__tree_1a67d23e7c48875261141f6259ade40749" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>size_type</name></member>
      <member refid="classradix__tree_1a6053e1b2ccac54f990d6377a1797ebc8" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>value_type</name></member>
      <member refid="classradix__tree_1a2bb7871a53afe5f826b3ab77fe039075" prot="public" virt="non-virtual"><scope>radix_tree</scope><name>~radix_tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
